Test (2B): rejoin of partitioned leader ...
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 0, isLeader is false
0: GetState result, term is 0, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 0, isLeader is false
0: GetState result, term is 0, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 0, isLeader is false
0: GetState result, term is 0, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 0, isLeader is false
0: GetState result, term is 0, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 0, isLeader is false
0: GetState result, term is 0, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 0, isLeader is false
0: GetState result, term is 0, isLeader is false
sleep 50 ms to retry
0: curtime: 1609317225821, see time stampe: 1609317225519, time out after 274 ms
0: [POLL-START] update timestamp to 1609317225821 ms
2: curtime: 1609317225821, see time stampe: 1609317225519, time out after 244 ms
2: [POLL-START] update timestamp to 1609317225821 ms
0: start poll 
2: start poll 
0: request vote {"CurrentTerm":1,"Whoimi":0,"LastLogIndex":0,"LastLogTerm":0} to 2
2: receive vote request {"CurrentTerm":1,"Whoimi":0,"LastLogIndex":0,"LastLogTerm":0} from 0
2: reject for this term because voted
2: send vote reply {"CurrentTerm":1,"VoteFor":false,"NotLatest":false} to 0
0: request vote {"CurrentTerm":1,"Whoimi":0,"LastLogIndex":0,"LastLogTerm":0} to 1
2: request vote {"CurrentTerm":1,"Whoimi":2,"LastLogIndex":0,"LastLogTerm":0} to 0
1: GetState result, term is 0, isLeader is false
2: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
0: reply vote {"CurrentTerm":1,"VoteFor":false,"NotLatest":false} from 2
0: false to channel
2: request vote {"CurrentTerm":1,"Whoimi":2,"LastLogIndex":0,"LastLogTerm":0} to 1
0: get one result (&{1 false false}) 
1: receive vote request {"CurrentTerm":1,"Whoimi":2,"LastLogIndex":0,"LastLogTerm":0} from 2
1: accept and vote for 2!
1: send vote reply {"CurrentTerm":1,"VoteFor":true,"NotLatest":false} to 2
1: [VOTE-HANDLER] update timestamp to 1609317225822 ms
2: reply vote {"CurrentTerm":1,"VoteFor":true,"NotLatest":false} from 1
2: true to channel
0: receive vote request {"CurrentTerm":1,"Whoimi":2,"LastLogIndex":0,"LastLogTerm":0} from 2
0: reject for this term because voted
0: send vote reply {"CurrentTerm":1,"VoteFor":false,"NotLatest":false} to 2
labgob warning: Decoding into a non-default variable/field CurrentTerm may not work
1: receive vote request {"CurrentTerm":1,"Whoimi":0,"LastLogIndex":0,"LastLogTerm":0} from 0
1: reject for this term because voted
1: send vote reply {"CurrentTerm":1,"VoteFor":false,"NotLatest":false} to 0
0: reply vote {"CurrentTerm":1,"VoteFor":false,"NotLatest":false} from 1
0: false to channel
0: get one result (&{1 false false}) 
0: Already been return from all server
2: get one result (&{1 true false}) 
2: Get marjority vote
Recovered in f send on closed channel
2: initial leader rf log is [{"Command":0,"Term":0}]2: initial leader nextIndex  to [1,1,1] and matchIndex to [0,0,0]
2: Declare election win to all
2: current match index list [0,0] (not include self)
2: middle match index is 0, current commit index is 0
2: current match index list [0,0] (not include self)
2: middle match index is 0, current commit index is 0
2: Start Send heartBeat
2: Send heartBeat with term 1, leader commit index 0, current go routine number 19
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} from peer 2
0: warn: may be double leader in a term. my vote is: 0, leader id is: 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 0
0: current leader term 1 <> last log entry term 0, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317225823 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} to peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 0
1: current leader term 1 <> last log entry term 0, can't update commitIndex1: [LEADER-HEARTBEAT] update timestamp to 1609317225824 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 0
1: current leader term 1 <> last log entry term 0, can't update commitIndex1: [LEADER-HEARTBEAT] update timestamp to 1609317225824 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 0
0: current leader term 1 <> last log entry term 0, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317225824 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: GetState result, term is 1, isLeader is false
2: GetState result, term is 1, isLeader is true
2: append log request from client 101
Some claimed to be the leader
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is <nil>
nd is 0, cmd1 is <nil>
2: follower 0 last log index 1 <= leader log index 1
2: follower 1 last log index 1 <= leader log index 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":0,"PrevLogTerm":0,"Entries":[{"Command":101,"Term":1}],"LeaderCommit":0} to peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":0,"PrevLogTerm":0,"Entries":[{"Command":101,"Term":1}],"LeaderCommit":0} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 0
1: current leader term 1 <> last log entry term 0, can't update commitIndex1: append log request from 2 starting at 1 length is 1 
1: before append log length 1
1: after append log length 2
1: [LEADER-HEARTBEAT] update timestamp to 1609317225885 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: append log to 1 sucessfully range [1:1]
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":0,"PrevLogTerm":0,"Entries":[{"Command":101,"Term":1}],"LeaderCommit":0} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":0,"PrevLogTerm":0,"Entries":[{"Command":101,"Term":1}],"LeaderCommit":0} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 0
0: current leader term 1 <> last log entry term 0, can't update commitIndex0: append log request from 2 starting at 1 length is 1 
0: before append log length 1
0: after append log length 2
0: [LEADER-HEARTBEAT] update timestamp to 1609317225885 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: append log to 0 sucessfully range [1:1]
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is <nil>
nd is 0, cmd1 is <nil>
2: Send heartBeat with term 1, leader commit index 0, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} to peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 0
2: update current commitLogIndex from 0 to 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} to peer 0
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 0
1: update current commitIndex from 0 to 01: [LEADER-HEARTBEAT] update timestamp to 1609317225923 ms
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":0} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 0
0: update current commitIndex from 0 to 00: [LEADER-HEARTBEAT] update timestamp to 1609317225923 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: commit msg {"CommandValid":true,"Command":101,"CommandIndex":1} at 1 log
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is 101
nd is 1, cmd1 is 101
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is 101
nd is 1, cmd1 is 101
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is 101
nd is 1, cmd1 is 101
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is 101
nd is 1, cmd1 is 101
0 log value at index 1 is <nil>
1 log value at index 1 is <nil>
2 log value at index 1 is 101
nd is 1, cmd1 is 101
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 1
1: update current commitIndex from 0 to 11: [LEADER-HEARTBEAT] update timestamp to 1609317226024 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 1
0: update current commitIndex from 0 to 10: [LEADER-HEARTBEAT] update timestamp to 1609317226024 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: commit msg {"CommandValid":true,"Command":101,"CommandIndex":1} at 1 log
0: commit msg {"CommandValid":true,"Command":101,"CommandIndex":1} at 1 log
0 log value at index 1 is 101
1 log value at index 1 is 101
2 log value at index 1 is 101
nd is 3, cmd1 is 101
-------leader network failure-------
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 1
0: update current commitIndex from 1 to 10: [LEADER-HEARTBEAT] update timestamp to 1609317226125 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 1
1: update current commitIndex from 1 to 11: [LEADER-HEARTBEAT] update timestamp to 1609317226125 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 1
1: update current commitIndex from 1 to 11: [LEADER-HEARTBEAT] update timestamp to 1609317226227 ms
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 1
0: update current commitIndex from 1 to 10: [LEADER-HEARTBEAT] update timestamp to 1609317226227 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 1
1: update current commitIndex from 1 to 11: [LEADER-HEARTBEAT] update timestamp to 1609317226326 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 1
0: update current commitIndex from 1 to 10: [LEADER-HEARTBEAT] update timestamp to 1609317226326 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 1
1: update current commitIndex from 1 to 11: [LEADER-HEARTBEAT] update timestamp to 1609317226427 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 1
0: update current commitIndex from 1 to 10: [LEADER-HEARTBEAT] update timestamp to 1609317226427 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
0: term jump from 1 to 1, leader id is 2, commitIndex is 1
0: update current commitIndex from 1 to 10: [LEADER-HEARTBEAT] update timestamp to 1609317226527 ms
0: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: term jump from 1 to 1, leader id is 2, commitIndex is 1
1: update current commitIndex from 1 to 11: [LEADER-HEARTBEAT] update timestamp to 1609317226527 ms
1: reply entries {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 2
2: recieve entries reply {"CurrentTerm":1,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: GetState result, term is 1, isLeader is false
1: GetState result, term is 1, isLeader is false
2: GetState result, term is 1, isLeader is true
-------make old leader try to agree on some entries-------
2: GetState result, term is 1, isLeader is true
2: append log request from client 102
2: GetState result, term is 1, isLeader is true
2: append log request from client 103
2: GetState result, term is 1, isLeader is true
2: append log request from client 104
-------new leader commits, also for index=2-------
1: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
2: follower 0 last log index 2 <= leader log index 4
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":102,"Term":1},{"Command":103,"Term":1},{"Command":104,"Term":1}],"LeaderCommit":1} to peer 0
2: follower 1 last log index 2 <= leader log index 4
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":102,"Term":1},{"Command":103,"Term":1},{"Command":104,"Term":1}],"LeaderCommit":1} to peer 1
1: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
2: Send heartBeat with term 1, leader commit index 1, current go routine number 17
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 19
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
1: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 1, isLeader is false
0: GetState result, term is 1, isLeader is false
sleep 50 ms to retry
1: curtime: 1609317226861, see time stampe: 1609317226527, time out after 305 ms
1: [POLL-START] update timestamp to 1609317226861 ms
1: start poll 
1: request vote {"CurrentTerm":2,"Whoimi":1,"LastLogIndex":1,"LastLogTerm":1} to 2
2: Send heartBeat with term 1, leader commit index 1, current go routine number 24
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
0: curtime: 1609317226861, see time stampe: 1609317226527, time out after 317 ms
0: [POLL-START] update timestamp to 1609317226861 ms
0: start poll 
0: request vote {"CurrentTerm":2,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} to 2
0: request vote {"CurrentTerm":2,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} to 1
1: receive vote request {"CurrentTerm":2,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} from 0
1: reject for this term because voted
1: send vote reply {"CurrentTerm":2,"VoteFor":false,"NotLatest":false} to 0
0: reply vote {"CurrentTerm":2,"VoteFor":false,"NotLatest":false} from 1
0: false to channel
0: get one result (&{2 false false}) 
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
1: request vote {"CurrentTerm":2,"Whoimi":1,"LastLogIndex":1,"LastLogTerm":1} to 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: receive vote request {"CurrentTerm":2,"Whoimi":1,"LastLogIndex":1,"LastLogTerm":1} from 1
0: reject for this term because voted
0: send vote reply {"CurrentTerm":2,"VoteFor":false,"NotLatest":false} to 1
1: reply vote {"CurrentTerm":2,"VoteFor":false,"NotLatest":false} from 0
1: false to channel
1: get one result (&{2 false false}) 
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
2: Send heartBeat with term 1, leader commit index 1, current go routine number 27
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
2: Send heartBeat with term 1, leader commit index 1, current go routine number 29
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 31
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
1: GetState result, term is 2, isLeader is false
0: GetState result, term is 2, isLeader is false
sleep 50 ms to retry
0: curtime: 1609317227264, see time stampe: 1609317226861, time out after 380 ms
0: [POLL-START] update timestamp to 1609317227264 ms
0: start poll 
2: Send heartBeat with term 1, leader commit index 1, current go routine number 33
0: request vote {"CurrentTerm":3,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} to 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
0: request vote {"CurrentTerm":3,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} to 2
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
1: receive vote request {"CurrentTerm":3,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} from 0
1: accept and vote for 0!
1: send vote reply {"CurrentTerm":3,"VoteFor":true,"NotLatest":false} to 0
1: [VOTE-HANDLER] update timestamp to 1609317227264 ms
0: reply vote {"CurrentTerm":3,"VoteFor":true,"NotLatest":false} from 1
0: true to channel
0: get one result (&{3 true false}) 
0: Get marjority vote
0: initial leader rf log is [{"Command":0,"Term":0},{"Command":101,"Term":1}]0: initial leader nextIndex  to [2,2,2] and matchIndex to [0,0,0]
0: Declare election win to all
0: current match index list [0,0] (not include self)
0: middle match index is 0, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 2
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 1
1: current leader term 3 <> last log entry term 1, can't update commitIndex1: [LEADER-HEARTBEAT] update timestamp to 1609317227265 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: current match index list [0,0] (not include self)
0: middle match index is 0, current commit index is 1
0: Start Send heartBeat
0: Send heartBeat with term 3, leader commit index 1, current go routine number 42
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 1
1: current leader term 3 <> last log entry term 1, can't update commitIndex1: [LEADER-HEARTBEAT] update timestamp to 1609317227265 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: GetState result, term is 3, isLeader is false
0: GetState result, term is 3, isLeader is true
0: append log request from client 103
Some claimed to be the leader
0 log value at index 2 is <nil>
1 log value at index 2 is <nil>
2 log value at index 2 is <nil>
nd is 0, cmd1 is <nil>
0: follower 1 last log index 2 <= leader log index 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":1} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 1
1: current leader term 3 <> last log entry term 1, can't update commitIndex1: append log request from 0 starting at 2 length is 1 
1: before append log length 2
1: after append log length 3
1: [LEADER-HEARTBEAT] update timestamp to 1609317227307 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: append log to 1 sucessfully range [2:2]
0: follower 2 last log index 2 <= leader log index 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":1} to peer 2
0 log value at index 2 is <nil>
1 log value at index 2 is <nil>
2 log value at index 2 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 2 is <nil>
1 log value at index 2 is <nil>
2 log value at index 2 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 2 is <nil>
1 log value at index 2 is <nil>
2 log value at index 2 is <nil>
nd is 0, cmd1 is <nil>
2: Send heartBeat with term 1, leader commit index 1, current go routine number 43
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 1
0: update current commitLogIndex from 1 to 2
0: commit msg {"CommandValid":true,"Command":103,"CommandIndex":2} at 2 log
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 45
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 2
1: update current commitIndex from 1 to 21: [LEADER-HEARTBEAT] update timestamp to 1609317227367 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 2 is 103
1 log value at index 2 is <nil>
2 log value at index 2 is <nil>
nd is 1, cmd1 is 103
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
1: commit msg {"CommandValid":true,"Command":103,"CommandIndex":2} at 2 log
0 log value at index 2 is 103
1 log value at index 2 is 103
2 log value at index 2 is <nil>
nd is 2, cmd1 is 103
-------new leader network failure-------
0: Send heartBeat with term 3, leader commit index 2, current go routine number 46
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: Send heartBeat with term 1, leader commit index 1, current go routine number 48
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 2
1: update current commitIndex from 2 to 21: [LEADER-HEARTBEAT] update timestamp to 1609317227468 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: Send heartBeat with term 3, leader commit index 2, current go routine number 49
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 2
1: update current commitIndex from 2 to 21: [LEADER-HEARTBEAT] update timestamp to 1609317227568 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: Send heartBeat with term 1, leader commit index 1, current go routine number 50
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: Send heartBeat with term 3, leader commit index 2, current go routine number 52
0: current match index list [0,2] (not include self)
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 2
1: update current commitIndex from 2 to 21: [LEADER-HEARTBEAT] update timestamp to 1609317227668 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: Send heartBeat with term 1, leader commit index 1, current go routine number 53
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: append log request to 2 time out!
0: Send heartBeat with term 3, leader commit index 2, current go routine number 55
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 2
1: update current commitIndex from 2 to 21: [LEADER-HEARTBEAT] update timestamp to 1609317227769 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: Send heartBeat with term 1, leader commit index 1, current go routine number 56
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: follower 2 last log index 2 <= leader log index 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":2} to peer 2
2: Send heartBeat with term 1, leader commit index 1, current go routine number 58
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: Send heartBeat with term 3, leader commit index 2, current go routine number 60
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 0
1: term jump from 3 to 3, leader id is 0, commitIndex is 2
1: update current commitIndex from 2 to 21: [LEADER-HEARTBEAT] update timestamp to 1609317227870 ms
1: reply entries {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 0
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: GetState result, term is 3, isLeader is true
1: GetState result, term is 3, isLeader is false
-------old leader connected again-------
1: GetState result, term is 3, isLeader is false
2: GetState result, term is 1, isLeader is true
2: append log request from client 104
Some claimed to be the leader
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: Send heartBeat with term 3, leader commit index 2, current go routine number 61
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: Send heartBeat with term 1, leader commit index 1, current go routine number 61
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 1
1: recieve entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} from peer 2
1: reject because currentTerm 3 > 1
2: recieve entries reply {"CurrentTerm":3,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: 1 return with new leader term 3, stop current leadership, back to follower!
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: send entries {"CurrentTerm":1,"LeaderId":2,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":1} to peer 0
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: current match index list [1,1] (not include self)
2: middle match index is 1, current commit index is 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
2: curtime: 1609317228071, see time stampe: 1609317225821, time out after 546 ms
2: [POLL-START] update timestamp to 1609317228071 ms
2: start poll 
2: request vote {"CurrentTerm":4,"Whoimi":2,"LastLogIndex":5,"LastLogTerm":1} to 1
1: receive vote request {"CurrentTerm":4,"Whoimi":2,"LastLogIndex":5,"LastLogTerm":1} from 2
1: reject for log not latest
1: send vote reply {"CurrentTerm":3,"VoteFor":false,"NotLatest":true} to 2
2: reply vote {"CurrentTerm":3,"VoteFor":false,"NotLatest":true} from 1
2: false to channel
2: get one result (&{3 false true}) 
2: wait 500ms more time because log not latest
2: [VOTE-REJECT] update timestamp to 1609317228571 ms
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
2: request vote {"CurrentTerm":4,"Whoimi":2,"LastLogIndex":5,"LastLogTerm":1} to 0
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 63
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: Send heartBeat with term 3, leader commit index 2, current go routine number 64
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: Send heartBeat with term 3, leader commit index 2, current go routine number 66
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: curtime: 1609317228373, see time stampe: 1609317227870, time out after 406 ms
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 68
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: [POLL-START] update timestamp to 1609317228373 ms
1: start poll 
1: request vote {"CurrentTerm":4,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} to 2
2: receive vote request {"CurrentTerm":4,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} from 1
2: reject for this term because voted
2: send vote reply {"CurrentTerm":4,"VoteFor":false,"NotLatest":false} to 1
1: reply vote {"CurrentTerm":4,"VoteFor":false,"NotLatest":false} from 2
1: false to channel
1: get one result (&{4 false false}) 
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: request vote {"CurrentTerm":4,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} to 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 72
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 74
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: append log request to 0 time out!
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: curtime: 1609317228676, see time stampe: 1609317228373, time out after 281 ms
1: [POLL-START] update timestamp to 1609317228676 ms
1: start poll 
1: request vote {"CurrentTerm":5,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} to 2
2: receive vote request {"CurrentTerm":5,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} from 1
2: accept and vote for 1!
2: send vote reply {"CurrentTerm":5,"VoteFor":true,"NotLatest":false} to 1
2: [VOTE-HANDLER] update timestamp to 1609317228680 ms
1: reply vote {"CurrentTerm":5,"VoteFor":true,"NotLatest":false} from 2
1: true to channel
1: get one result (&{5 true false}) 
1: Get marjority vote
1: initial leader rf log is [{"Command":0,"Term":0},{"Command":101,"Term":1},{"Command":103,"Term":3}]1: initial leader nextIndex  to [3,3,3] and matchIndex to [0,0,0]
1: Declare election win to all
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: request vote {"CurrentTerm":5,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} to 0
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317228683 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: Start Send heartBeat
1: Send heartBeat with term 5, leader commit index 2, current go routine number 83
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317228684 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
0: Send heartBeat with term 3, leader commit index 2, current go routine number 77
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 84
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317228784 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0: Send heartBeat with term 3, leader commit index 2, current go routine number 85
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 86
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317228885 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 87
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: rquest vote {"CurrentTerm":2,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} time out2: rquest vote {"CurrentTerm":4,"Whoimi":2,"LastLogIndex":5,"LastLogTerm":1} time out0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: rquest vote {"CurrentTerm":2,"Whoimi":1,"LastLogIndex":1,"LastLogTerm":1} time out2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 85
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317228985 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 86
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: Send heartBeat with term 3, leader commit index 2, current go routine number 88
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: Send heartBeat with term 5, leader commit index 2, current go routine number 88
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229087 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: Send heartBeat with term 3, leader commit index 2, current go routine number 89
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 89
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229187 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 92
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229288 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
0: Send heartBeat with term 3, leader commit index 2, current go routine number 92
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: Send heartBeat with term 5, leader commit index 2, current go routine number 93
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229388 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 94
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: rquest vote {"CurrentTerm":4,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} time out0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 95
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229488 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 96
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: append log request to 2 time out!
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
1: Send heartBeat with term 5, leader commit index 2, current go routine number 95
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229589 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 96
1: current match index list [0,0] (not include self)
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: middle match index is 0, current commit index is 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: follower 2 last log index 2 <= leader log index 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":2} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 98
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: Send heartBeat with term 3, leader commit index 2, current go routine number 98
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229690 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 99
0: Send heartBeat with term 3, leader commit index 2, current go routine number 99
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229791 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: rquest vote {"CurrentTerm":3,"Whoimi":0,"LastLogIndex":1,"LastLogTerm":1} time out0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: Send heartBeat with term 5, leader commit index 2, current go routine number 101
0: Send heartBeat with term 3, leader commit index 2, current go routine number 101
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 0
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317229892 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: GetState result, term is 5, isLeader is true
1: append log request from client 104
Some claimed to be the leader
0 log value at index 3 is <nil>
1 log value at index 3 is <nil>
2 log value at index 3 is <nil>
nd is 0, cmd1 is <nil>
1: follower 0 last log index 3 <= leader log index 3
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":2,"PrevLogTerm":3,"Entries":[{"Command":104,"Term":5}],"LeaderCommit":2} to peer 0
1: follower 2 last log index 3 <= leader log index 3
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":2,"PrevLogTerm":3,"Entries":[{"Command":104,"Term":5}],"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":2,"PrevLogTerm":3,"Entries":[{"Command":104,"Term":5}],"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: reject because find conflict term 1 at range [1:2]
2: [LEADER-HEARTBEAT] update timestamp to 1609317229944 ms
2: reply entries {"CurrentTerm":5,"Success":false,"ConflictTermFirstLogIndex":1,"ConflictTermLogTerm":1,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":false,"ConflictTermFirstLogIndex":1,"ConflictTermLogTerm":1,"VotedFor":0} from peer 2
1: log index of server 2 back skip from 3 to 1
1: follower 2 last log index 1 <= leader log index 3
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":0,"PrevLogTerm":0,"Entries":[{"Command":101,"Term":1},{"Command":103,"Term":3},{"Command":104,"Term":5}],"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":0,"PrevLogTerm":0,"Entries":[{"Command":101,"Term":1},{"Command":103,"Term":3},{"Command":104,"Term":5}],"LeaderCommit":2} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 2
2: current leader term 5 <> last log entry term 1, can't update commitIndex2: append log request from 1 starting at 1 length is 3 
2: before append log length 6
2: after append log length 4
2: [LEADER-HEARTBEAT] update timestamp to 1609317229944 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: append log to 2 sucessfully range [1:3]
0 log value at index 3 is <nil>
1 log value at index 3 is <nil>
2 log value at index 3 is <nil>
nd is 0, cmd1 is <nil>
2: commit msg {"CommandValid":true,"Command":103,"CommandIndex":2} at 2 log
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: append log request to 2 time out!
0 log value at index 3 is <nil>
1 log value at index 3 is <nil>
2 log value at index 3 is <nil>
nd is 0, cmd1 is <nil>
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
0: current match index list [0,2] (not include self)
0: middle match index is 2, current commit index is 2
1: current match index list [0,3] (not include self)
1: middle match index is 3, current commit index is 2
1: update current commitLogIndex from 2 to 3
0: Send heartBeat with term 3, leader commit index 2, current go routine number 103
1: Send heartBeat with term 5, leader commit index 3, current go routine number 103
1: current match index list [0,3] (not include self)
1: middle match index is 3, current commit index is 3
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":3} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":3} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 3
2: update current commitIndex from 2 to 32: [LEADER-HEARTBEAT] update timestamp to 1609317229993 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":2} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":3} to peer 0
0 log value at index 3 is <nil>
1 log value at index 3 is <nil>
2 log value at index 3 is <nil>
nd is 0, cmd1 is <nil>
1: commit msg {"CommandValid":true,"Command":104,"CommandIndex":3} at 3 log
2: commit msg {"CommandValid":true,"Command":104,"CommandIndex":3} at 3 log
0 log value at index 3 is <nil>
1 log value at index 3 is 104
2 log value at index 3 is 104
nd is 2, cmd1 is 104
-------all together now-------
1: GetState result, term is 5, isLeader is true
1: append log request from client 105
Some claimed to be the leader
0 log value at index 4 is <nil>
1 log value at index 4 is <nil>
2 log value at index 4 is <nil>
nd is 0, cmd1 is <nil>
1: follower 2 last log index 4 <= leader log index 4
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":3,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":5}],"LeaderCommit":3} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":3,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":5}],"LeaderCommit":3} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 3
2: update current commitIndex from 3 to 32: append log request from 1 starting at 4 length is 1 
2: before append log length 4
2: after append log length 5
2: [LEADER-HEARTBEAT] update timestamp to 1609317230027 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: append log to 2 sucessfully range [4:4]
0 log value at index 4 is <nil>
1 log value at index 4 is <nil>
2 log value at index 4 is <nil>
nd is 0, cmd1 is <nil>
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 4 is <nil>
1 log value at index 4 is <nil>
2 log value at index 4 is <nil>
nd is 0, cmd1 is <nil>
0: follower 2 last log index 2 <= leader log index 2
0: send entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":2} to peer 2
2: recieve entries {"CurrentTerm":3,"LeaderId":0,"PrevLogIndex":1,"PrevLogTerm":1,"Entries":[{"Command":103,"Term":3}],"LeaderCommit":2} from peer 0
2: reject because currentTerm 5 > 3
0: recieve entries reply {"CurrentTerm":5,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":1} from peer 2
0: 2 return with new leader term 5, stop current leadership, back to follower!
0: [NEW-LEADER] update timestamp to 1609317230068 ms
0 log value at index 4 is <nil>
1 log value at index 4 is <nil>
2 log value at index 4 is <nil>
nd is 0, cmd1 is <nil>
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 3
1: update current commitLogIndex from 3 to 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 100
1: current match index list [0,4] (not include self)
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230094 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: middle match index is 4, current commit index is 4
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 3 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230094 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is <nil>
2 log value at index 4 is <nil>
nd is 0, cmd1 is <nil>
2: commit msg {"CommandValid":true,"Command":105,"CommandIndex":4} at 4 log
1: commit msg {"CommandValid":true,"Command":105,"CommandIndex":4} at 4 log
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 98
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230195 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: [LEADER-HEARTBEAT] update timestamp to 1609317230195 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 97
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230296 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230296 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 97
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230396 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230397 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 5, leader commit index 4, current go routine number 95
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230497 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230497 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 95
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230598 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230598 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 93
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230699 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230700 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 91
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230799 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230799 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 91
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317230900 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317230900 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 89
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231000 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317231000 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 5, leader commit index 4, current go routine number 88
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231102 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317231102 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 86
1: current match index list [0,4] (not include self)
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
1: middle match index is 4, current commit index is 4
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: term jump from 5 to 5, leader id is 1, commitIndex is 4
0: current leader term 5 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317231204 ms
0: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231204 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: curtime: 1609317231418, see time stampe: 1609317231204, time out after 175 ms
0: [POLL-START] update timestamp to 1609317231418 ms
0: start poll 
0: request vote {"CurrentTerm":6,"Whoimi":0,"LastLogIndex":2,"LastLogTerm":3} to 2
2: receive vote request {"CurrentTerm":6,"Whoimi":0,"LastLogIndex":2,"LastLogTerm":3} from 0
2: reject for log not latest
2: send vote reply {"CurrentTerm":5,"VoteFor":false,"NotLatest":true} to 0
0: reply vote {"CurrentTerm":5,"VoteFor":false,"NotLatest":true} from 2
0: false to channel
0: get one result (&{5 false true}) 
0: wait 500ms more time because log not latest
0: [VOTE-REJECT] update timestamp to 1609317231918 ms
0: request vote {"CurrentTerm":6,"Whoimi":0,"LastLogIndex":2,"LastLogTerm":3} to 1
1: receive vote request {"CurrentTerm":6,"Whoimi":0,"LastLogIndex":2,"LastLogTerm":3} from 0
1: reject for log not latest
1: send vote reply {"CurrentTerm":5,"VoteFor":false,"NotLatest":true} to 0
0: reply vote {"CurrentTerm":5,"VoteFor":false,"NotLatest":true} from 1
0: false to channel
0: get one result (&{5 false true}) 
0: wait 500ms more time because log not latest
0: [VOTE-REJECT] update timestamp to 1609317232418 ms
0: Already been return from all server
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 84
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231420 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
2: recieve entries reply {"CurrentTerm":3,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 81
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231520 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 80
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231621 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 79
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231722 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 78
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231825 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: current match index list [0,4] (not include self)
1: middle match index is 4, current commit index is 4
1: Send heartBeat with term 5, leader commit index 4, current go routine number 77
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} to peer 0
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: [LEADER-HEARTBEAT] update timestamp to 1609317231953 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":4} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
0 log value at index 4 is <nil>
1 log value at index 4 is 105
2 log value at index 4 is 105
nd is 2, cmd1 is 105
2: GetState result, term is 5, isLeader is false
0: GetState result, term is 6, isLeader is false
1: GetState result, term is 5, isLeader is true
1: append log request from client 105
Some claimed to be the leader
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: follower 2 last log index 5 <= leader log index 5
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":4,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":5}],"LeaderCommit":4} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":4,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":5}],"LeaderCommit":4} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 4
2: update current commitIndex from 4 to 42: append log request from 1 starting at 5 length is 1 
2: before append log length 5
2: after append log length 6
2: [LEADER-HEARTBEAT] update timestamp to 1609317232040 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: append log to 2 sucessfully range [5:5]
0 log value at index 5 is <nil>
1 log value at index 5 is <nil>
2 log value at index 5 is <nil>
nd is 0, cmd1 is <nil>
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 4
1: update current commitLogIndex from 4 to 5
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: Send heartBeat with term 5, leader commit index 5, current go routine number 77
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 5
2: update current commitIndex from 4 to 52: [LEADER-HEARTBEAT] update timestamp to 1609317232054 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: commit msg {"CommandValid":true,"Command":105,"CommandIndex":5} at 5 log
2: commit msg {"CommandValid":true,"Command":105,"CommandIndex":5} at 5 log
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: Send heartBeat with term 5, leader commit index 5, current go routine number 76
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 5
2: update current commitIndex from 5 to 52: [LEADER-HEARTBEAT] update timestamp to 1609317232158 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: rquest vote {"CurrentTerm":5,"Whoimi":1,"LastLogIndex":2,"LastLogTerm":3} time out0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: Send heartBeat with term 5, leader commit index 5, current go routine number 71
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 5
2: update current commitIndex from 5 to 52: [LEADER-HEARTBEAT] update timestamp to 1609317232258 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: current match index list [0,5] (not include self)
1: middle match index is 5, current commit index is 5
1: Send heartBeat with term 5, leader commit index 5, current go routine number 69
1: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 5 to 5, leader id is 1, commitIndex is 5
2: update current commitIndex from 5 to 51: send entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":5,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: reject because currentTerm 6 > 5
1: recieve entries reply {"CurrentTerm":6,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: 0 return with new leader term 6, stop current leadership, back to follower!
2: [LEADER-HEARTBEAT] update timestamp to 1609317232359 ms
2: reply entries {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: curtime: 1609317232460, see time stampe: 1609317228676, time out after 196 ms
1: [POLL-START] update timestamp to 1609317232460 ms
1: start poll 
1: request vote {"CurrentTerm":7,"Whoimi":1,"LastLogIndex":5,"LastLogTerm":5} to 2
2: receive vote request {"CurrentTerm":7,"Whoimi":1,"LastLogIndex":5,"LastLogTerm":5} from 1
2: accept and vote for 1!
2: send vote reply {"CurrentTerm":7,"VoteFor":true,"NotLatest":false} to 1
2: [VOTE-HANDLER] update timestamp to 1609317232460 ms
1: reply vote {"CurrentTerm":7,"VoteFor":true,"NotLatest":false} from 2
1: true to channel
1: get one result (&{7 true false}) 
1: Get marjority vote
1: initial leader rf log is [{"Command":0,"Term":0},{"Command":101,"Term":1},{"Command":103,"Term":3},{"Command":104,"Term":5},{"Command":105,"Term":5},{"Command":105,"Term":5}]1: initial leader nextIndex  to [6,6,6] and matchIndex to [0,0,0]
1: Declare election win to all
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: request vote {"CurrentTerm":7,"Whoimi":1,"LastLogIndex":5,"LastLogTerm":5} to 0
0: receive vote request {"CurrentTerm":7,"Whoimi":1,"LastLogIndex":5,"LastLogTerm":5} from 1
0: accept and vote for 1!
0: send vote reply {"CurrentTerm":7,"VoteFor":true,"NotLatest":false} to 1
0: [VOTE-HANDLER] update timestamp to 1609317232461 ms
Recovered in f send on closed channel
1: Start Send heartBeat
1: Send heartBeat with term 7, leader commit index 5, current go routine number 71
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232461 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232461 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232461 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232462 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
2: append log request to 1 time out!
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: Send heartBeat with term 7, leader commit index 5, current go routine number 69
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232564 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232564 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: Send heartBeat with term 7, leader commit index 5, current go routine number 66
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232665 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232665 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 65
1: current match index list [0,0] (not include self)
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232765 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232765 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: append log request to 0 time out!
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 63
1: current match index list [0,0] (not include self)
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232865 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232868 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 63
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317232966 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317232966 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 59
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233066 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233067 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 59
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233167 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233167 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 58
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233267 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233267 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 54
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233368 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233368 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 51
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233469 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233469 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 50
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233570 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233570 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: Send heartBeat with term 7, leader commit index 5, current go routine number 50
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233671 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233671 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: Send heartBeat with term 7, leader commit index 5, current go routine number 49
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233771 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233772 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: Send heartBeat with term 7, leader commit index 5, current go routine number 47
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233876 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233876 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 1
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":0,"Success":false,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
0: recieve entries reply {"CurrentTerm":3,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: current match index list [0,0] (not include self)
1: middle match index is 0, current commit index is 5
1: Send heartBeat with term 7, leader commit index 5, current go routine number 44
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: [LEADER-HEARTBEAT] update timestamp to 1609317233977 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: [LEADER-HEARTBEAT] update timestamp to 1609317233977 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 5 is <nil>
1 log value at index 5 is 105
2 log value at index 5 is 105
nd is 2, cmd1 is 105
2: GetState result, term is 7, isLeader is false
0: GetState result, term is 7, isLeader is false
1: GetState result, term is 7, isLeader is true
1: append log request from client 105
Some claimed to be the leader
0 log value at index 6 is <nil>
1 log value at index 6 is <nil>
2 log value at index 6 is <nil>
nd is 0, cmd1 is <nil>
1: follower 2 last log index 6 <= leader log index 6
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":5,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":7}],"LeaderCommit":5} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":5,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":7}],"LeaderCommit":5} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 5
2: current leader term 7 <> last log entry term 5, can't update commitIndex2: append log request from 1 starting at 6 length is 1 
2: before append log length 6
2: after append log length 7
2: [LEADER-HEARTBEAT] update timestamp to 1609317234030 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: append log to 2 sucessfully range [6:6]
1: follower 0 last log index 6 <= leader log index 6
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":5,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":7}],"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":5,"PrevLogTerm":5,"Entries":[{"Command":105,"Term":7}],"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: reject because prevLogIndex 5 bigger then current log index 2
0: [LEADER-HEARTBEAT] update timestamp to 1609317234051 ms
0: reply entries {"CurrentTerm":7,"Success":false,"ConflictTermFirstLogIndex":3,"ConflictTermLogTerm":-1,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":false,"ConflictTermFirstLogIndex":3,"ConflictTermLogTerm":-1,"VotedFor":0} from peer 0
1: log index of server 0 back skip from 6 to 3
1: follower 0 last log index 3 <= leader log index 6
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":2,"PrevLogTerm":3,"Entries":[{"Command":104,"Term":5},{"Command":105,"Term":5},{"Command":105,"Term":5},{"Command":105,"Term":7}],"LeaderCommit":5} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":2,"PrevLogTerm":3,"Entries":[{"Command":104,"Term":5},{"Command":105,"Term":5},{"Command":105,"Term":5},{"Command":105,"Term":7}],"LeaderCommit":5} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 5
0: current leader term 7 <> last log entry term 3, can't update commitIndex0: append log request from 1 starting at 3 length is 4 
0: before append log length 3
0: after append log length 7
0: [LEADER-HEARTBEAT] update timestamp to 1609317234051 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: append log to 0 sucessfully range [3:6]
0: commit msg {"CommandValid":true,"Command":104,"CommandIndex":3} at 3 log
0: commit msg {"CommandValid":true,"Command":105,"CommandIndex":4} at 4 log
0: commit msg {"CommandValid":true,"Command":105,"CommandIndex":5} at 5 log
0 log value at index 6 is <nil>
1 log value at index 6 is <nil>
2 log value at index 6 is <nil>
nd is 0, cmd1 is <nil>
1: recieve entries reply {"CurrentTerm":5,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
0 log value at index 6 is <nil>
1 log value at index 6 is <nil>
2 log value at index 6 is <nil>
nd is 0, cmd1 is <nil>
1: current match index list [6,6] (not include self)
1: middle match index is 6, current commit index is 5
1: update current commitLogIndex from 5 to 6
1: current match index list [6,6] (not include self)
1: middle match index is 6, current commit index is 6
1: Send heartBeat with term 7, leader commit index 6, current go routine number 42
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":6} to peer 2
2: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":6} from peer 1
2: term jump from 7 to 7, leader id is 1, commitIndex is 6
2: update current commitIndex from 5 to 62: [LEADER-HEARTBEAT] update timestamp to 1609317234077 ms
2: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 2
1: send entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":6} to peer 0
0: recieve entries {"CurrentTerm":7,"LeaderId":1,"PrevLogIndex":-1,"PrevLogTerm":-1,"Entries":null,"LeaderCommit":6} from peer 1
0: term jump from 7 to 7, leader id is 1, commitIndex is 6
0: update current commitIndex from 5 to 60: [LEADER-HEARTBEAT] update timestamp to 1609317234078 ms
0: reply entries {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} to peer 1
1: recieve entries reply {"CurrentTerm":7,"Success":true,"ConflictTermFirstLogIndex":0,"ConflictTermLogTerm":0,"VotedFor":0} from peer 0
1: commit msg {"CommandValid":true,"Command":105,"CommandIndex":6} at 6 log
0: commit msg {"CommandValid":true,"Command":105,"CommandIndex":6} at 6 log
2: commit msg {"CommandValid":true,"Command":105,"CommandIndex":6} at 6 log
0 log value at index 6 is 105
1 log value at index 6 is 105
2 log value at index 6 is <nil>
nd is 2, cmd1 is 105
0 log value at index 6 is 105
1 log value at index 6 is 105
2 log value at index 6 is 105
nd is 3, cmd1 is 105
  ... Passed --   8.6  3  251   71846    6
PASS
ok  	_/mnt/e/Work/Go/lab2/6.824/src/raft	8.599s
